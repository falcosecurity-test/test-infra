deck:
  branding:
    header_color: "#00AEC7" # Falco Teal
    logo: "/static/extensions/favicon.png"
    favicon: "/static/extensions/favicon.png"
  spyglass:
    size_limit: 500000000 # 500MB
    lenses:
      - lens:
          name: metadata
        required_files:
        - started.json|finished.json
        optional_files:
        - podinfo.json
      - lens:
          name: buildlog
        required_files:
          - build-log.txt
      - lens:
          name: podinfo
        required_files:
          - podinfo.json

plank:
  job_url_template: 'https://prow.falco.local/view/s3/falco-prow-logs/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if .Spec.Refs}}{{if ne .Spec.Refs.Org ""}}/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  job_url_prefix_config:
    '*': https://prow.falco.local/view/
  report_templates:
    '*': '[Full PR test history](https://prow.falco.local/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/{{.Spec.Refs.Org}}/{{.Spec.Refs.Repo}}/issues?q=is:issue+is:open) when you hit one in your PR.'
  max_concurrency: 100 # Limit of concurrent ProwJobs. Need to be adjusted depending of the cluster size.
  pod_pending_timeout: 60m
  default_decoration_configs:
    '*':
      timeout: 24h # Up to 24 hours for driverkit builder jobs
      grace_period: 10m
      utility_images:
        clonerefs: "gcr.io/k8s-prow/clonerefs:v20220318-1a1db3d5d8"
        initupload: "gcr.io/k8s-prow/initupload:v20220318-1a1db3d5d8"
        entrypoint: "gcr.io/k8s-prow/entrypoint:v20220318-1a1db3d5d8"
        sidecar: "gcr.io/k8s-prow/sidecar:v20220318-1a1db3d5d8"
      gcs_configuration:
        bucket: s3://falco-prow-logs
        path_strategy: explicit
      s3_credentials_secret: "s3-credentials" #secret in use with IAM creds for sidecar pod log upload

sinker:
  resync_period: 1m
  max_prowjob_age: 48h
  max_pod_age: 24h
  terminated_pod_ttl: 2h

branch-protection:
  enforce_admins: true # rules apply to admins too!
  restrictions: # restrict who can push
    teams: ["maintainers", "machine_users"]
  required_pull_request_reviews:
    dismiss_stale_reviews: true # automat dismiss old reviews
    dismissal_restrictions: # allow review dismissals
      teams:
        - maintainers
        - machine_users
    require_code_owner_reviews: true # require a code owner approval
    required_approving_review_count: 1 # number of approvals
  required_status_checks:
    strict: false # we don't want to block any PR if it's not up to date, we have the rebase merge strategy and needs-rebase plugin
  orgs:
    falcosecurity-test:
      # dco check is required for all PRs of any falcosecurity-test project
      required_status_checks:
        contexts:
          - dco
      repos:
        .github:
          branches: &default_branch_protection
            master:
              protect: true
        charts:
          required_status_checks:
            contexts:
              - "ci/circleci: lint-charts"
              - "ci/circleci: lint-scripts"
              - "ci/circleci: install-charts"
          branches:
            << : *default_branch_protection
            gh-pages:
              protect: true
              enforce_admins: false # do not enforce all configured restrictions for admins, since our bot needs to push while the CI workflow is running
              required_pull_request_reviews: # disable PR reviews since our bot needs to push while the CI workflow is running
                require_code_owner_reviews: false
                required_approving_review_count: 0
        client-go:
          branches: *default_branch_protection
          required_status_checks:
            contexts:
              - "ci/circleci: test"
        client-py:
          branches: *default_branch_protection
        client-rs:
          branches: *default_branch_protection
        community:
          branches: *default_branch_protection
        driverkit:
          branches: *default_branch_protection
        evolution:
          branches: *default_branch_protection
        event-generator:
          branches: *default_branch_protection
        falco:
          required_pull_request_reviews:
            required_approving_review_count: 2
          required_status_checks:
            contexts:
              - "ci/circleci: integration"
              - "ci/circleci: centos7"
              - "ci/circleci: musl"
          branches:
            << : *default_branch_protection
            "release/0.28.1":
              protect: true
        falcosidekick:
          required_status_checks:
            contexts:
              - "ci/circleci: lint"
              - "ci/circleci: test"
              - "ci/circleci: build-image"
          branches: *default_branch_protection
        falcosidekick-ui:
          required_status_checks:
            contexts:
              - "ci/circleci: lint"
              - "ci/circleci: test"
              - "ci/circleci: build-image"
          branches: *default_branch_protection
        falco-exporter:
          branches: *default_branch_protection
          required_status_checks:
            contexts:
              - "ci/circleci: test"
        falcoctl:
          branches: *default_branch_protection
        falco-website:
          branches:
            << : *default_branch_protection
            v0.26:
              protect: true
            v0.27:
              protect: true
            v0.28:
              protect: true
            v0.29:
              protect: true
            v0.30:
              protect: true
          required_status_checks:
            contexts:
              - "netlify/falcosecurity-test/deploy-preview"
        katacoda-scenarios:
          branches: *default_branch_protection
        kilt:
          branches: *default_branch_protection
        libs:
          required_pull_request_reviews:
            required_approving_review_count: 2
          branches: *default_branch_protection
        pdig:
          branches: *default_branch_protection
        plugins:
          branches:
            main:
              protect: true
        plugin-sdk-cpp:
          branches: *default_branch_protection
        plugin-sdk-go:
          branches: *default_branch_protection
        template-repository:
          branches: *default_branch_protection
        test-infra:
          branches: *default_branch_protection
          required_status_checks:
            contexts:
              - "check-prow-config"

log_level: debug

pod_namespace: test-pods

prowjob_namespace: default

tide:
  target_url: https://prow.falco.local/tide
  context_options:
    skip-unknown-contexts: true
    from-branch-protection: true
  merge_method:
    falcosecurity-test: rebase
  queries:
    # Query for repos that DON'T need release notes
    - repos:
        - falcosecurity-test/dodo
        - falcosecurity-test/.github
        - falcosecurity-test/charts
        - falcosecurity-test/community
        - falcosecurity-test/driverkit
        - falcosecurity-test/event-generator
        - falcosecurity-test/evolution
        - falcosecurity-test/falco-exporter
        - falcosecurity-test/falco-website
        - falcosecurity-test/falcosidekick
        - falcosecurity-test/falcosidekick-ui
        - falcosecurity-test/katacoda-scenarios
        - falcosecurity-test/pdig
        - falcosecurity-test/plugin-sdk-cpp
        - falcosecurity-test/plugins
        - falcosecurity-test/template-repository
        - falcosecurity-test/test-infra
      labels: &default_required_labels
        - approved
        - lgtm
        - "dco-signoff: yes"
      missingLabels:
        - do-not-merge
        - do-not-merge/hold
        - do-not-merge/invalid-owners-file
        - do-not-merge/work-in-progress
        - needs-rebase
      reviewApprovedRequired: true

    # Query for repos that DO need release notes (should be in sync with repos that adopt `release-note` plugin)
    - repos:
        - falcosecurity-test/client-go
        - falcosecurity-test/client-py
        - falcosecurity-test/client-rs
        - falcosecurity-test/falco
        - falcosecurity-test/falcoctl
        - falcosecurity-test/kilt
        - falcosecurity-test/libs
        - falcosecurity-test/plugin-sdk-go
      labels: *default_required_labels
      missingLabels:
        - do-not-merge
        - do-not-merge/hold
        - do-not-merge/invalid-owners-file
        - do-not-merge/work-in-progress
        - do-not-merge/release-note-label-needed
        - needs-rebase
      reviewApprovedRequired: true
